{
	"name": "ARAAS_Copy_extract_pipeline",
	"properties": {
		"activities": [
			{
				"name": "Fetch_file_list",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "fetchzipfile",
						"type": "DatasetReference",
						"parameters": {
							"filepath": {
								"value": "@pipeline().parameters.filepath",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems",
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Filter1",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Fetch_file_list",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Fetch_file_list').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@startswith(item().name, pipeline().parameters.filename)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Condition",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Filter1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(equals(activity('Filter1').output.FilteredItemsCount,0))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Logs_update_extracted_firsttime",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Set_export_files_status_var",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderStoredProcedureName": "[ADW_PDW_EDW].[log_details]",
									"storedProcedureParameters": {
										"filename": {
											"type": "String",
											"value": {
												"value": "@if(and(equals(dayOfWeek(utcNow()),6),and(equals(pipeline().parameters.routine,'OC65950'),equals(pipeline().parameters.Occurrence,'W'))),\nconcat('VEH_UIO-',formatDateTime(utcNow(),'yyyy-MM-dd'),'.txt'),\nif(and(not(equals(dayOfWeek(utcNow()),6)),and(equals(pipeline().parameters.routine,'OC65973'),equals(pipeline().parameters.Occurrence,'D'))),\nconcat(formatDateTime(utcNow(),'yyyyMMdd'),'.RO'),\n'0'))",
												"type": "Expression"
											}
										},
										"Flag": {
											"type": "String",
											"value": {
												"value": "U",
												"type": "Expression"
											}
										},
										"params": {
											"type": "String",
											"value": {
												"value": "@concat(\n'routine :',string(pipeline().parameters.routine),' ',\n'Occurrence :',string(pipeline().parameters.Occurrence),' '\n)",
												"type": "Expression"
											}
										},
										"Pipeline": {
											"type": "String",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										"routine": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.routine\n",
												"type": "Expression"
											}
										},
										"runEnd": {
											"type": "DateTime",
											"value": {
												"value": "@convertFromUtc(utcNow(),'Eastern Standard Time')",
												"type": "Expression"
											}
										},
										"RunId": {
											"type": "String",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										},
										"runStart": {
											"type": "DateTime",
											"value": {
												"value": "@convertFromUtc(pipeline().TriggerTime, 'Eastern Standard Time')",
												"type": "Expression"
											}
										},
										"status": {
											"type": "String",
											"value": {
												"value": "@variables('activitydetails')",
												"type": "Expression"
											}
										},
										"TriggerTime": {
											"type": "String",
											"value": {
												"value": "@string(formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd'))",
												"type": "Expression"
											}
										},
										"errormessage": {
											"type": "String",
											"value": {
												"value": "@variables('activityerror')",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSynapseAnalyticsSQLDB",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Logs_insert_extracted_firsttime",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderStoredProcedureName": "[ADW_PDW_EDW].[log_details]",
									"storedProcedureParameters": {
										"filename": {
											"type": "String",
											"value": {
												"value": "@if(and(equals(dayOfWeek(utcNow()),6),and(equals(pipeline().parameters.routine,'OC65950'),equals(pipeline().parameters.Occurrence,'W'))),\nconcat('VEH_UIO-',formatDateTime(utcNow(),'yyyy-MM-dd'),'.txt'),\nif(and(not(equals(dayOfWeek(utcNow()),6)),and(equals(pipeline().parameters.routine,'OC65973'),equals(pipeline().parameters.Occurrence,'D'))),\nconcat(formatDateTime(utcNow(),'yyyyMMdd'),'.RO'),\n'0'))",
												"type": "Expression"
											}
										},
										"Flag": {
											"type": "String",
											"value": {
												"value": "I",
												"type": "Expression"
											}
										},
										"params": {
											"type": "String",
											"value": {
												"value": "@concat(\n'routine :',string(pipeline().parameters.routine),' ',\n'Occurrence :',string(pipeline().parameters.Occurrence),' '\n)",
												"type": "Expression"
											}
										},
										"Pipeline": {
											"type": "String",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										"routine": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.routine",
												"type": "Expression"
											}
										},
										"runEnd": {
											"type": "DateTime",
											"value": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										},
										"RunId": {
											"type": "String",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										},
										"runStart": {
											"type": "DateTime",
											"value": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											}
										},
										"status": {
											"type": "String",
											"value": {
												"value": "Failed",
												"type": "Expression"
											}
										},
										"TriggerTime": {
											"type": "String",
											"value": {
												"value": "@string(formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd'))",
												"type": "Expression"
											}
										},
										"errormessage": {
											"type": "String",
											"value": {
												"value": "@variables('activityerror')",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSynapseAnalyticsSQLDB",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Set_export_files_status_var1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Create_zip",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "activityerror",
								"value": {
									"value": "@activity('Create_zip').output.executionDetails[0].status",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set_export_files_status_var",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Create_zip",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "activityerror",
								"value": {
									"value": "@activity('Create_zip').output.executionDetails[0].status",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set_export_files_error_var",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set_export_files_status_var1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "activityerror",
								"value": {
									"value": "@activity('Create_zip').error.message",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Logs_update_extracted_failed_firsttime",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Set_export_files_error_var",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderStoredProcedureName": "[ADW_PDW_EDW].[log_details]",
									"storedProcedureParameters": {
										"filename": {
											"type": "String",
											"value": {
												"value": "@if(and(equals(dayOfWeek(utcNow()),6),and(equals(pipeline().parameters.routine,'OC65950'),equals(pipeline().parameters.Occurrence,'W'))),\nconcat('VEH_UIO-',formatDateTime(utcNow(),'yyyy-MM-dd'),'.txt'),\nif(and(not(equals(dayOfWeek(utcNow()),6)),and(equals(pipeline().parameters.routine,'OC65973'),equals(pipeline().parameters.Occurrence,'D'))),\nconcat(formatDateTime(utcNow(),'yyyyMMdd'),'.RO'),\n'0'))",
												"type": "Expression"
											}
										},
										"Flag": {
											"type": "String",
											"value": {
												"value": "U",
												"type": "Expression"
											}
										},
										"params": {
											"type": "String",
											"value": {
												"value": "@concat(\n'routine :',string(pipeline().parameters.routine),' ',\n'Occurrence :',string(pipeline().parameters.Occurrence),' '\n)",
												"type": "Expression"
											}
										},
										"Pipeline": {
											"type": "String",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										"routine": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.routine\n",
												"type": "Expression"
											}
										},
										"runEnd": {
											"type": "DateTime",
											"value": {
												"value": "@convertFromUtc(utcNow(),'Eastern Standard Time')",
												"type": "Expression"
											}
										},
										"RunId": {
											"type": "String",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										},
										"runStart": {
											"type": "DateTime",
											"value": {
												"value": "@convertFromUtc(pipeline().TriggerTime, 'Eastern Standard Time')",
												"type": "Expression"
											}
										},
										"status": {
											"type": "String",
											"value": {
												"value": "@variables('activitydetails')",
												"type": "Expression"
											}
										},
										"TriggerTime": {
											"type": "String",
											"value": {
												"value": "@string(formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd'))",
												"type": "Expression"
											}
										},
										"errormessage": {
											"type": "String",
											"value": {
												"value": "@variables('activityerror')",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSynapseAnalyticsSQLDB",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Fetch_dms_file_list",
							"type": "GetMetadata",
							"dependsOn": [
								{
									"activity": "Logs_insert_extracted_firsttime",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "fetchzipfile",
									"type": "DatasetReference",
									"parameters": {
										"filepath": {
											"value": "@concat('adls-dms-mra/MRA/MRA_RAW/',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day','yyyy-MM-dd'),'yyyy-MM-dd'),'/DAPS+ASBD+MRA+',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day','yyyy-MM-dd'),'yyyy-MM-dd'),'.zip')",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"childItems",
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "Filter_RO",
							"type": "Filter",
							"dependsOn": [
								{
									"activity": "Fetch_dms_file_list",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Fetch_dms_file_list').output.childItems",
									"type": "Expression"
								},
								"condition": {
									"value": "@and(startswith(item().name,subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day','yyyyMMdd')),endswith(item().name,'.RO'))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Copy_file_adls",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Filter_RO",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFolderPath": {
											"value": "@concat('adls-dms-mra/MRA/MRA_RAW/',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'yyyy-MM-dd'),'/DAPS+ASBD+MRA+',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'yyyy-MM-dd'),'.zip/')",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "*.RO",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Copy_DelimitedText",
									"type": "DatasetReference",
									"parameters": {
										"routine": {
											"value": "@pipeline().parameters.routine",
											"type": "Expression"
										},
										"previous_date": {
											"value": "@pipeline().parameters.previous_date",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Quote": {
											"value": "@pipeline().parameters.Quote",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										},
										"filepath": {
											"value": "@concat('adls-dms-mra/MRA/MRA_RAW/',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'yyyy-MM-dd'),'/DAPS+ASBD+MRA+',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'yyyy-MM-dd'),'.zip/')",
											"type": "Expression"
										},
										"filename": {
											"value": "@string(activity('Filter_RO').output.value)",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Copy_DelimitedText",
									"type": "DatasetReference",
									"parameters": {
										"routine": {
											"value": "@pipeline().parameters.routine",
											"type": "Expression"
										},
										"previous_date": {
											"value": "@pipeline().parameters.previous_date",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Quote": {
											"value": "@pipeline().parameters.Quote",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										},
										"filepath": {
											"value": "@pipeline().parameters.filepath",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat('SAMPLE-',pipeline().parameters.filename,pipeline().parameters.Occurrence,'-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'MMddyyyy'),'.txt')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Create_zip",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy_MRA_file",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFolderPath": {
											"value": "@pipeline().parameters.filepath",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@concat('MRA.RO.CAR-','*.txt')",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Copy_DelimitedText",
									"type": "DatasetReference",
									"parameters": {
										"routine": {
											"value": "@pipeline().parameters.routine",
											"type": "Expression"
										},
										"previous_date": {
											"value": "@pipeline().parameters.previous_date",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Quote": {
											"value": "@pipeline().parameters.Quote",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										},
										"filepath": {
											"value": "@pipeline().parameters.filepath",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat('MRA.RO.CAR-D-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day','yyyy-MM-dd'),'MMddyyyy'),'.txt')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "copy_adls_zip_file",
									"type": "DatasetReference",
									"parameters": {
										"filename": {
											"value": "@concat(pipeline().parameters.filepath,'/',pipeline().parameters.filename,pipeline().parameters.Occurrence,'-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'MMddyyyy'),'.zip')",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										},
										"Quote": {
											"value": "@pipeline().parameters.Quote",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "delete_mra_txt_file",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Create_zip",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADSL2STORAGEBLOB",
									"type": "DatasetReference",
									"parameters": {
										"file_path": {
											"value": "adls-araas/ASBD/Processed",
											"type": "Expression"
										},
										"file_name": {
											"value": "@concat(pipeline().parameters.filename,pipeline().parameters.Occurrence,'-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'MMddyyyy'),'.txt')",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Quote": {
											"value": "@pipeline().parameters.Quote",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@{concat(pipeline().parameters.filename,pipeline().parameters.Occurrence,'-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'MMddyyyy'),'.txt','*')}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Copy_MRA_file",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "Copy_file_adls",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/DataEngineering/ARAAS/ASBD/Copy_MRA_file",
								"baseParameters": {
									"source_filename": {
										"value": "@concat('SAMPLE-',pipeline().parameters.filename,pipeline().parameters.Occurrence,'-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'MMddyyyy'),'.txt')",
										"type": "Expression"
									},
									"Destination_filename": {
										"value": "@concat('/mnt/adls-araas/ASBD/Processed/MRA.RO.CAR-D-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day','yyyy-MM-dd'),'MMddyyyy'),'.txt')",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "MBUSA_DEV",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "delete_sample_mra_txt_file",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "delete_mra_txt_file",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADSL2STORAGEBLOB",
									"type": "DatasetReference",
									"parameters": {
										"file_path": {
											"value": "adls-araas/ASBD/Processed",
											"type": "Expression"
										},
										"file_name": {
											"value": "@concat('SAMPLE-',pipeline().parameters.filename,pipeline().parameters.Occurrence,'-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'MMddyyyy'),'.txt')",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Quote": {
											"value": "@pipeline().parameters.Quote",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@{concat(pipeline().parameters.filename,pipeline().parameters.Occurrence,'-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'MMddyyyy'),'.txt','*')}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "archive_files",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Logs_insert",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFileName": {
											"value": "@concat(pipeline().parameters.filename,'*')",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings",
										"compressionProperties": {
											"type": "ZipDeflateReadSettings",
											"preserveZipFileNameAsFolder": false
										}
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".zip"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ADSL2STORAGEBLOB",
									"type": "DatasetReference",
									"parameters": {
										"file_path": {
											"value": "@pipeline().parameters.filepath",
											"type": "Expression"
										},
										"file_name": {
											"value": "@string(activity('Filter1').output.value)",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Quote": {
											"value": "@if(equals(pipeline().parameters.Quote,'D'),'\"','' )",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "archivestorage",
									"type": "DatasetReference",
									"parameters": {
										"file_path": {
											"value": "@pipeline().parameters.filepath",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"Quote": {
											"value": "@if(equals(pipeline().parameters.Quote,'D'),'\"','' )",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "delete_old_files",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "archive_files",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADSL2STORAGEBLOB",
									"type": "DatasetReference",
									"parameters": {
										"file_path": {
											"value": "@pipeline().parameters.filepath",
											"type": "Expression"
										},
										"file_name": {
											"value": "@string(activity('Filter1').output.value)",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Quote": {
											"value": "@if(equals(pipeline().parameters.Quote,'D'),'\"','' )",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@{concat(pipeline().parameters.filename,'*')}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Logs_update_extract_success",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Setextractstatsvar",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderStoredProcedureName": "[ADW_PDW_EDW].[log_details]",
									"storedProcedureParameters": {
										"filename": {
											"type": "String",
											"value": {
												"value": "@if(and(equals(dayOfWeek(utcNow()),6),and(equals(pipeline().parameters.routine,'OC65950'),equals(pipeline().parameters.Occurrence,'W'))),\nconcat('VEH_UIO-',formatDateTime(utcNow(),'yyyy-MM-dd'),'.txt'),\nif(and(not(equals(dayOfWeek(utcNow()),6)),and(equals(pipeline().parameters.routine,'OC65973'),equals(pipeline().parameters.Occurrence,'D'))),\nconcat(formatDateTime(utcNow(),'yyyyMMdd'),'.RO'),\n'0'))",
												"type": "Expression"
											}
										},
										"Flag": {
											"type": "String",
											"value": {
												"value": "U",
												"type": "Expression"
											}
										},
										"params": {
											"type": "String",
											"value": {
												"value": "@concat(\n'routine :',string(pipeline().parameters.routine),' ',\n'Occurrence :',string(pipeline().parameters.Occurrence),' '\n)",
												"type": "Expression"
											}
										},
										"Pipeline": {
											"type": "String",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										"routine": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.routine\n",
												"type": "Expression"
											}
										},
										"runEnd": {
											"type": "DateTime",
											"value": {
												"value": "@convertFromUtc(utcNow(),'Eastern Standard Time')",
												"type": "Expression"
											}
										},
										"RunId": {
											"type": "String",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										},
										"runStart": {
											"type": "DateTime",
											"value": {
												"value": "@convertFromUtc(pipeline().TriggerTime, 'Eastern Standard Time')",
												"type": "Expression"
											}
										},
										"status": {
											"type": "String",
											"value": {
												"value": "@variables('activitydetails')",
												"type": "Expression"
											}
										},
										"TriggerTime": {
											"type": "String",
											"value": {
												"value": "@string(formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd'))",
												"type": "Expression"
											}
										},
										"errormessage": {
											"type": "String",
											"value": {
												"value": "@variables('activityerror')",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSynapseAnalyticsSQLDB",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Logs_insert",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderStoredProcedureName": "[ADW_PDW_EDW].[log_details]",
									"storedProcedureParameters": {
										"filename": {
											"type": "String",
											"value": {
												"value": "@string(activity('Filter1').output.value)",
												"type": "Expression"
											}
										},
										"Flag": {
											"type": "String",
											"value": {
												"value": "I",
												"type": "Expression"
											}
										},
										"params": {
											"type": "String",
											"value": {
												"value": "@concat(\n'routine :',string(pipeline().parameters.routine),' ',\n'Occurrence :',string(pipeline().parameters.Occurrence),' ',\n'Filepath :',string(pipeline().parameters.filepath),' ',\n'FileName :',string(pipeline().parameters.filename)\n)",
												"type": "Expression"
											}
										},
										"Pipeline": {
											"type": "String",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										"routine": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.routine",
												"type": "Expression"
											}
										},
										"runEnd": {
											"type": "DateTime",
											"value": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										},
										"RunId": {
											"type": "String",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										},
										"runStart": {
											"type": "DateTime",
											"value": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											}
										},
										"status": {
											"type": "String",
											"value": {
												"value": "Failed",
												"type": "Expression"
											}
										},
										"TriggerTime": {
											"type": "String",
											"value": {
												"value": "@string(formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd'))",
												"type": "Expression"
											}
										},
										"errormessage": {
											"type": "String",
											"value": {
												"value": "@variables('activityerror')",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSynapseAnalyticsSQLDB",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Setarchivevar",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "archive_files",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "activityerror",
								"value": {
									"value": "@activity('archive_files').output.executionDetails[0].status\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Setdeletevar",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "delete_old_files",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "activityerror",
								"value": {
									"value": "@activity('delete_old_files').output.executionDetails[0].status\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set_extract_failed_var",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Create_zip1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "activityerror",
								"value": {
									"value": "@activity('Create_zip1').output.executionDetails[0].status\n\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Setextractstatsvar",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Create_zip1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "activityerror",
								"value": {
									"value": "@activity('Create_zip1').output.executionDetails[0].status",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Logs_update_extract_fail",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Set_extract_error_var",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderStoredProcedureName": "[ADW_PDW_EDW].[log_details]",
									"storedProcedureParameters": {
										"filename": {
											"type": "String",
											"value": {
												"value": "@if(and(equals(dayOfWeek(utcNow()),6),and(equals(pipeline().parameters.routine,'OC65950'),equals(pipeline().parameters.Occurrence,'W'))),\nconcat('VEH_UIO-',formatDateTime(utcNow(),'yyyy-MM-dd'),'.txt'),\nif(and(not(equals(dayOfWeek(utcNow()),6)),and(equals(pipeline().parameters.routine,'OC65973'),equals(pipeline().parameters.Occurrence,'D'))),\nconcat(formatDateTime(utcNow(),'yyyyMMdd'),'.RO'),\n'0'))",
												"type": "Expression"
											}
										},
										"Flag": {
											"type": "String",
											"value": {
												"value": "U",
												"type": "Expression"
											}
										},
										"params": {
											"type": "String",
											"value": {
												"value": "@concat(\n'routine :',string(pipeline().parameters.routine),' ',\n'Occurrence :',string(pipeline().parameters.Occurrence),' '\n)",
												"type": "Expression"
											}
										},
										"Pipeline": {
											"type": "String",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										"routine": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.routine\n",
												"type": "Expression"
											}
										},
										"runEnd": {
											"type": "DateTime",
											"value": {
												"value": "@convertFromUtc(utcNow(),'Eastern Standard Time')",
												"type": "Expression"
											}
										},
										"RunId": {
											"type": "String",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										},
										"runStart": {
											"type": "DateTime",
											"value": {
												"value": "@convertFromUtc(pipeline().TriggerTime, 'Eastern Standard Time')",
												"type": "Expression"
											}
										},
										"status": {
											"type": "String",
											"value": {
												"value": "@variables('activitydetails')",
												"type": "Expression"
											}
										},
										"TriggerTime": {
											"type": "String",
											"value": {
												"value": "@string(formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd'))",
												"type": "Expression"
											}
										},
										"errormessage": {
											"type": "String",
											"value": {
												"value": "@variables('activityerror')",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSynapseAnalyticsSQLDB",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Logs_update_delete_fail",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Set_delete_failed_error_var",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderStoredProcedureName": "[ADW_PDW_EDW].[log_details]",
									"storedProcedureParameters": {
										"filename": {
											"type": "String",
											"value": {
												"value": "@if(and(equals(dayOfWeek(utcNow()),6),and(equals(pipeline().parameters.routine,'OC65950'),equals(pipeline().parameters.Occurrence,'W'))),\nconcat('VEH_UIO-',formatDateTime(utcNow(),'yyyy-MM-dd'),'.txt'),\nif(and(not(equals(dayOfWeek(utcNow()),6)),and(equals(pipeline().parameters.routine,'OC65973'),equals(pipeline().parameters.Occurrence,'D'))),\nconcat(formatDateTime(utcNow(),'yyyyMMdd'),'.RO'),\n'0'))",
												"type": "Expression"
											}
										},
										"Flag": {
											"type": "String",
											"value": {
												"value": "U",
												"type": "Expression"
											}
										},
										"params": {
											"type": "String",
											"value": {
												"value": "@concat(\n'routine :',string(pipeline().parameters.routine),' ',\n'Occurrence :',string(pipeline().parameters.Occurrence),' '\n)",
												"type": "Expression"
											}
										},
										"Pipeline": {
											"type": "String",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										"routine": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.routine\n",
												"type": "Expression"
											}
										},
										"runEnd": {
											"type": "DateTime",
											"value": {
												"value": "@convertFromUtc(utcNow(),'Eastern Standard Time')",
												"type": "Expression"
											}
										},
										"RunId": {
											"type": "String",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										},
										"runStart": {
											"type": "DateTime",
											"value": {
												"value": "@convertFromUtc(pipeline().TriggerTime, 'Eastern Standard Time')",
												"type": "Expression"
											}
										},
										"status": {
											"type": "String",
											"value": {
												"value": "@variables('activitydetails')",
												"type": "Expression"
											}
										},
										"TriggerTime": {
											"type": "String",
											"value": {
												"value": "@string(formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd'))",
												"type": "Expression"
											}
										},
										"errormessage": {
											"type": "String",
											"value": {
												"value": "@variables('activityerror')",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSynapseAnalyticsSQLDB",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Logs_update_archive_fail",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Set_archive_failed_error_var",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderStoredProcedureName": "[ADW_PDW_EDW].[log_details]",
									"storedProcedureParameters": {
										"filename": {
											"type": "String",
											"value": {
												"value": "@if(and(equals(dayOfWeek(utcNow()),6),and(equals(pipeline().parameters.routine,'OC65950'),equals(pipeline().parameters.Occurrence,'W'))),\nconcat('VEH_UIO-',formatDateTime(utcNow(),'yyyy-MM-dd'),'.txt'),\nif(and(not(equals(dayOfWeek(utcNow()),6)),and(equals(pipeline().parameters.routine,'OC65973'),equals(pipeline().parameters.Occurrence,'D'))),\nconcat(formatDateTime(utcNow(),'yyyyMMdd'),'.RO'),\n'0'))",
												"type": "Expression"
											}
										},
										"Flag": {
											"type": "String",
											"value": {
												"value": "U",
												"type": "Expression"
											}
										},
										"params": {
											"type": "String",
											"value": {
												"value": "@concat(\n'routine :',string(pipeline().parameters.routine),' ',\n'Occurrence :',string(pipeline().parameters.Occurrence),' '\n)",
												"type": "Expression"
											}
										},
										"Pipeline": {
											"type": "String",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										"routine": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.routine\n",
												"type": "Expression"
											}
										},
										"runEnd": {
											"type": "DateTime",
											"value": {
												"value": "@convertFromUtc(utcNow(),'Eastern Standard Time')",
												"type": "Expression"
											}
										},
										"RunId": {
											"type": "String",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										},
										"runStart": {
											"type": "DateTime",
											"value": {
												"value": "@convertFromUtc(pipeline().TriggerTime, 'Eastern Standard Time')",
												"type": "Expression"
											}
										},
										"status": {
											"type": "String",
											"value": {
												"value": "@variables('activitydetails')",
												"type": "Expression"
											}
										},
										"TriggerTime": {
											"type": "String",
											"value": {
												"value": "@string(formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd'))",
												"type": "Expression"
											}
										},
										"errormessage": {
											"type": "String",
											"value": {
												"value": "@variables('activityerror')",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSynapseAnalyticsSQLDB",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Set_extract_error_var",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set_extract_failed_var",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "activityerror",
								"value": {
									"value": "@activity('Create_zip1').error.message",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set_delete_failed_error_var",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Setdeletevar",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "activityerror",
								"value": {
									"value": "@activity('delete_old_files').error.message",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set_archive_failed_error_var",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Setarchivevar",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "activityerror",
								"value": {
									"value": "@activity('archive_files').error.message",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Fetch_dms_file_list1",
							"type": "GetMetadata",
							"dependsOn": [
								{
									"activity": "delete_old_files",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "fetchzipfile",
									"type": "DatasetReference",
									"parameters": {
										"filepath": {
											"value": "@concat('adls-dms-mra/MRA/MRA_RAW/',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day','yyyy-MM-dd'),'yyyy-MM-dd'),'/DAPS+ASBD+MRA+',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day','yyyy-MM-dd'),'yyyy-MM-dd'),'.zip')",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"childItems",
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "Filter_RO1",
							"type": "Filter",
							"dependsOn": [
								{
									"activity": "Fetch_dms_file_list1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Fetch_dms_file_list1').output.childItems",
									"type": "Expression"
								},
								"condition": {
									"value": "@and(startswith(item().name,subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day','yyyyMMdd')),endswith(item().name,'.RO'))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Copy_file_adls1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Filter_RO1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFolderPath": {
											"value": "@concat('adls-dms-mra/MRA/MRA_RAW/',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'yyyy-MM-dd'),'/DAPS+ASBD+MRA+',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'yyyy-MM-dd'),'.zip/')",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "*.RO",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Copy_DelimitedText",
									"type": "DatasetReference",
									"parameters": {
										"routine": {
											"value": "@pipeline().parameters.routine",
											"type": "Expression"
										},
										"previous_date": {
											"value": "@pipeline().parameters.previous_date",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Quote": {
											"value": "@if(equals(pipeline().parameters.Quote,'D'),'\"','' )",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										},
										"filepath": {
											"value": "@concat('adls-dms-mra/MRA/MRA_RAW/',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'yyyy-MM-dd'),'/DAPS+ASBD+MRA+',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'yyyy-MM-dd'),'.zip/')",
											"type": "Expression"
										},
										"filename": {
											"value": "@string(activity('Filter1').output.value)",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Copy_DelimitedText",
									"type": "DatasetReference",
									"parameters": {
										"routine": {
											"value": "@pipeline().parameters.routine",
											"type": "Expression"
										},
										"previous_date": {
											"value": "@pipeline().parameters.previous_date",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Quote": {
											"value": "@if(equals(pipeline().parameters.Quote,'D'),'\"','' )",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										},
										"filepath": {
											"value": "adls-araas/ASBD/Processed/",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat('SAMPLE-',pipeline().parameters.filename,pipeline().parameters.Occurrence,'-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'MMddyyyy'),'.txt')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Create_zip1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy_MRA_file1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFolderPath": {
											"value": "@pipeline().parameters.filepath",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@concat('MRA.RO.CAR-','*.txt')",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Copy_DelimitedText",
									"type": "DatasetReference",
									"parameters": {
										"routine": {
											"value": "@pipeline().parameters.routine",
											"type": "Expression"
										},
										"previous_date": {
											"value": "@pipeline().parameters.previous_date",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Quote": {
											"value": "@if(equals(pipeline().parameters.Quote,'D'),'\"','' )",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										},
										"filepath": {
											"value": "@pipeline().parameters.filepath",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat('MRA.RO.CAR-D-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day','yyyy-MM-dd'),'MMddyyyy'),'.txt')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "copy_adls_zip_file",
									"type": "DatasetReference",
									"parameters": {
										"filename": {
											"value": "@concat('adls-araas/ASBD/Processed/MRA.RO.CAR-D-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day','yyyy-MM-dd'),'MMddyyyy'),'.zip')",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										},
										"Quote": {
											"value": "@if(equals(pipeline().parameters.Quote,'D'),'\"','' )",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "delete_mra_txt_file1",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Create_zip1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADSL2STORAGEBLOB",
									"type": "DatasetReference",
									"parameters": {
										"file_path": {
											"value": "adls-araas/ASBD/Processed",
											"type": "Expression"
										},
										"file_name": {
											"value": "@concat(pipeline().parameters.filename,pipeline().parameters.Occurrence,'-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'MMddyyyy'),'.txt')",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Quote": {
											"value": "@if(equals(pipeline().parameters.Quote,'D'),'\"','' )",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@{concat(pipeline().parameters.filename,pipeline().parameters.Occurrence,'-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'MMddyyyy'),'.txt','*')}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Copy_MRA_file1",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "Copy_file_adls1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/DataEngineering/ARAAS/ASBD/Copy_MRA_file",
								"baseParameters": {
									"source_filename": {
										"value": "@concat('SAMPLE-',pipeline().parameters.filename,pipeline().parameters.Occurrence,'-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'MMddyyyy'),'.txt')",
										"type": "Expression"
									},
									"Destination_filename": {
										"value": "@concat('/mnt/adls-araas/ASBD/Processed/MRA.RO.CAR-D-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day','yyyy-MM-dd'),'MMddyyyy'),'.txt')",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "MBUSA_DEV",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "delete_sample_mra_txt_file1",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "delete_mra_txt_file1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADSL2STORAGEBLOB",
									"type": "DatasetReference",
									"parameters": {
										"file_path": {
											"value": "adls-araas/ASBD/Processed",
											"type": "Expression"
										},
										"file_name": {
											"value": "@concat('SAMPLE-',pipeline().parameters.filename,pipeline().parameters.Occurrence,'-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'MMddyyyy'),'.txt')",
											"type": "Expression"
										},
										"Escape": {
											"value": "@pipeline().parameters.Escape",
											"type": "Expression"
										},
										"delimiter": {
											"value": "@pipeline().parameters.delimiter",
											"type": "Expression"
										},
										"Quote": {
											"value": "@if(equals(pipeline().parameters.Quote,'D'),'\"','' )",
											"type": "Expression"
										},
										"Header": {
											"value": "@pipeline().parameters.Header",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@{concat(pipeline().parameters.filename,pipeline().parameters.Occurrence,'-',formatDateTime(subtractFromTime(utcNow(),pipeline().parameters.previous_date,'Day'),'MMddyyyy'),'.txt','*')}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"filepath": {
				"type": "string"
			},
			"filename": {
				"type": "string"
			},
			"routine": {
				"type": "string"
			},
			"Occurrence": {
				"type": "string"
			},
			"Escape": {
				"type": "string"
			},
			"Quote": {
				"type": "string"
			},
			"delimiter": {
				"type": "string"
			},
			"Header": {
				"type": "string"
			},
			"previous_date": {
				"type": "int"
			}
		},
		"variables": {
			"activitydetails": {
				"type": "String"
			},
			"activityerror": {
				"type": "String"
			},
			"archivepath": {
				"type": "String"
			}
		},
		"folder": {
			"name": "ARAAS"
		},
		"annotations": [],
		"lastPublishTime": "2023-03-21T02:01:02Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}