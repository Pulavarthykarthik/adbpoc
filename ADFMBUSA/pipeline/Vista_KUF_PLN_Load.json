{
	"name": "Vista_KUF_PLN_Load",
	"properties": {
		"activities": [
			{
				"name": "Loading data to Azure synapse",
				"description": "Loading data from ADLS to Azure Synapse",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Create_Staging_Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@if(equals(dayOfWeek(adddays(utcnow(),-1)),6),pipeline().parameters.Files1,pipeline().parameters.Files2)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "VDW Copy Data",
							"description": "Loading data from ADLS to ADW ",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Data Transformation And Cleansing",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@concat('/processed/',item(),'/year=',formatDateTime(variables('run_date'),'yyyy'),'/month=',formatDateTime(variables('run_date'),'MM'),'/day=',formatDateTime(variables('run_date'),'dd'),'/')",
											"type": "Expression"
										},
										"wildcardFileName": "*.csv",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "SqlDWSink",
									"preCopyScript": {
										"value": "@{concat('TRUNCATE table ',if(equals(item(),'DAY_DIM'),'ADW_Enterprise_Dimensions',\nif(equals(item(),'DLR_DIM'),'ADW_Dealer_EDW',\nif(contains(createArray('CPS_ACC_TYP','CPS_CARR_DIM','CPS_CLM_WO_STAT','CPS_INV_TYP_CDE','CPS_VPC_WO'),item()),'ADW_CPS_EDW',\nif(contains(createArray('C3_TIER_PGM_BONUS','C3_TIER_VEH_GRP','C3_VEH_CLS_BONUS','TR_CUR'),item()),'ADW_C3_EDW',\nif(contains(createArray('DLR_VEH_REL','VEHICLE','VEH_ACSRY_CMPNT','VEHICLE_ACSRY','VEHICLE_EVENT','MODEL_ACSRY_CMP','MODEL_PRC','VEH_DLR_ASGMT','VEH_MSG','VEH_OBJ_MTY','VEH_PHASE_MFCT','CPS_INV_ITM_DIM','CPS_REQ_ITM_DIM','CPS_WRNTY_CLM','CMRCL_ACCT_DIM','CUR_MODEL_ACSRY','FLT_EVNT_VEH_REQ','VEH_ASGMT','DLR_DLVY_APP','GRYMKT_DLR_EXPRT',\n'MBFS_VEH_GRNDG',\n'VEH_C3_ACQSN',\n'VEH_OCDR',\n'VEH_OCDU',\n'VEH_RSRV_HIST',\n'VEH_VSSL_TRVL',\n'ALTRNS_PGM_VEH',\n'KUF_PLN',\n'MODEL_PRC_ACSRY',\n'PREO_VEH_SMRY'),item()),'ADW_VISTA_EDW_STG','ADW_VISTA_EDW'))))),'.',item())}",
										"type": "Expression"
									},
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"enableSkipIncompatibleRow": false
							},
							"inputs": [
								{
									"referenceName": "VDW_Processed",
									"type": "DatasetReference",
									"parameters": {
										"date": {
											"value": "@variables('run_date')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "VISTA_Tables",
									"type": "DatasetReference",
									"parameters": {
										"DWTableName": {
											"value": "@item()",
											"type": "Expression"
										},
										"DWSchema": {
											"value": "@if(equals(item(),'DAY_DIM'),'ADW_Enterprise_Dimensions',\nif(equals(item(),'DLR_DIM'),'ADW_Dealer_EDW',\nif(contains(createArray('CPS_ACC_TYP','CPS_CARR_DIM','CPS_CLM_WO_STAT','CPS_INV_TYP_CDE','CPS_VPC_WO'),item()),'ADW_CPS_EDW',\nif(contains(createArray('C3_TIER_PGM_BONUS','C3_TIER_VEH_GRP','C3_VEH_CLS_BONUS','TR_CUR'),item()),'ADW_C3_EDW',\nif(contains(createArray('DLR_VEH_REL','VEHICLE','VEH_ACSRY_CMPNT','VEHICLE_ACSRY','VEHICLE_EVENT','MODEL_ACSRY_CMP','MODEL_PRC','VEH_DLR_ASGMT','VEH_MSG','VEH_OBJ_MTY','VEH_PHASE_MFCT','PREO_VEH_SMRY','CPS_INV_ITM_DIM','CPS_REQ_ITM_DIM','CPS_WRNTY_CLM','CMRCL_ACCT_DIM','CUR_MODEL_ACSRY','FLT_EVNT_VEH_REQ','VEH_ASGMT','DLR_DLVY_APP','GRYMKT_DLR_EXPRT',\n'MBFS_VEH_GRNDG',\n'VEH_C3_ACQSN',\n'VEH_OCDR',\n'VEH_OCDU',\n'VEH_RSRV_HIST',\n'VEH_VSSL_TRVL',\n'KUF_PLN',\n'ALTRNS_PGM_VEH',\n'MODEL_PRC_ACSRY'),item()),'ADW_VISTA_EDW_STG','ADW_VISTA_EDW')))))",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Logs",
							"description": "Creating Logs of Copy data",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "VDW Copy Data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/DataEngineering/VISTA/Daily_Load/Audit",
								"baseParameters": {
									"START_TME": {
										"value": "@activity('VDW Copy Data').output.executionDetails[0].start",
										"type": "Expression"
									},
									"S_TOTAL_COUNT": {
										"value": "@concat(activity('VDW Copy Data').output.rowsRead)",
										"type": "Expression"
									},
									"D_TOTAL_COUNT": {
										"value": "@concat(activity('VDW Copy Data').output.rowsCopied)",
										"type": "Expression"
									},
									"TOT_DUR": {
										"value": "@concat(activity('VDW Copy Data').output.copyDuration)",
										"type": "Expression"
									},
									"DTS_CREA": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"DTS_LAST_UPDT": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"END_TME": {
										"value": "@addseconds(activity('VDW Copy Data').output.executionDetails[0].start,activity('VDW Copy Data').output.copyDuration)",
										"type": "Expression"
									},
									"REMARKS": {
										"value": "@activity('VDW Copy Data').output.executionDetails[0].status",
										"type": "Expression"
									},
									"SF_NAME": {
										"value": "@item()",
										"type": "Expression"
									},
									"SCHEMA": {
										"value": "@if(equals(item(),'DAY_DIM'),'ADW_Enterprise_Dimensions',\nif(equals(item(),'DLR_DIM'),'ADW_Dealer_EDW',\nif(equals(item(),'DLR_DLVY_APP'),'ADW_WRNTY_EDW',\nif(contains(createArray('CPS_ACC_TYP','CPS_CARR_DIM','CPS_CLM_WO_STAT','CPS_INV_TYP_CDE','CPS_VPC_WO','CPS_INV_ITM_DIM','CPS_REQ_ITM_DIM','CPS_WRNTY_CLM'),item()),'ADW_CPS_EDW',\nif(contains(createArray('TR_CUR','PREO_VEH_SMRY'),item()),'ADW_C3_EDW','ADW_VISTA_EDW')))))",
										"type": "Expression"
									},
									"incre_date": {
										"value": "@formatDateTime(variables('run_date'),'yyyy-MM-dd')",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "MBUSA_DEV",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Data Transformation And Cleansing",
							"description": "Performing DE activities",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/DataEngineering/VISTA/Daily_Load/Transformation",
								"baseParameters": {
									"file_name": {
										"value": "@item()",
										"type": "Expression"
									},
									"incre_date": {
										"value": "@formatDateTime(variables('run_date'),'yyyyMMdd')",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "MBUSA_DEV",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Create_Staging_Tables",
				"description": "Creating staging tables for incremental load",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "drop staging table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[ADW_VISTA_EDW_STG].[CREATE_VISTA_STG_TBL_PROC]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDW2",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Copy_Logs",
				"description": "Copy log files from ADLS to ADW",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Loading data to Azure synapse",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@{concat('/audit_logs/',formatDateTime(variables('run_date'),'yyyy-MM-dd'),'/')}",
								"type": "Expression"
							},
							"wildcardFileName": "*.csv"
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "SqlDWSink"
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ADLS_DATAPRODUCTS",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "VISTA_Tables",
						"type": "DatasetReference",
						"parameters": {
							"DWTableName": "VISTA_ADWLD_AUD_LOG_TBL",
							"DWSchema": "ADW_VISTA_EDW"
						}
					}
				]
			},
			{
				"name": "Incremental_Insert_Update",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy_Logs",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[ADW_VISTA_EDW_STG].[ADW_VISTA_MERGE_PROC]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDW2",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Extract Zip Files",
				"description": "Fetching the daily data zip file from Daimler ADLS and extract it over reservoir ADLS",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings",
							"compressionProperties": {
								"type": "ZipDeflateReadSettings"
							}
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "Uncompressed_Vista_VDW",
						"type": "DatasetReference",
						"parameters": {
							"date": {
								"value": "@variables('run_date')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Uncompress_Dest_VDW",
						"type": "DatasetReference",
						"parameters": {
							"date": {
								"value": "@variables('run_date')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "PII_masking",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Loading data to Azure synapse",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@if(equals(pipeline().DataFactory,'xto-MS-edwdev-us-rsv-factory'),pipeline().parameters.mask_table,take(array(''),0))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Generate JSON",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/DataEngineering/VISTA/Masking/generate_json",
								"baseParameters": {
									"Table": {
										"value": "@item()",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "MBUSA_DEV",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Masking Processed Directory",
							"type": "DatabricksSparkJar",
							"dependsOn": [
								{
									"activity": "Generate JSON",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"mainClassName": "com.daimler.nbx.pseudo.wrapper.scala.Main",
								"parameters": [
									"@concat('/dbfs/mnt/data-engineering/vista-edw/masking/json/',item(),'.json')"
								],
								"libraries": [
									{
										"jar": "dbfs:/FileStore/DAPS/jars/nbx-pseudo-spark-databricks-runtime-7.jar"
									}
								]
							},
							"linkedServiceName": {
								"referenceName": "MBUSA_DEV",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Delete Unmasked Data",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "Masking Processed Directory",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/DataEngineering/VISTA/Masking/Delete_process_raw",
								"baseParameters": {
									"Table": {
										"value": "@item()",
										"type": "Expression"
									},
									"run_date": {
										"value": "@formatDateTime(variables('run_date'),'yyyy-MM-dd')\n",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "MBUSA_DEV",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "DQF",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Loading data to Azure synapse",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@if(equals(pipeline().DataFactory,'xto-MS-edwdev-us-rsv-factory'),pipeline().parameters.dqf_tables,take(array(''),0))",
						"type": "Expression"
					},
					"batchCount": 20,
					"activities": [
						{
							"name": "DQF Notebook",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/DataEngineering/DATAQUALITY/02_IMPLEMENTATION/DQF_RUN",
								"baseParameters": {
									"Date": {
										"value": "@formatDateTime(variables('run_date'),'yyyy-MM-dd')",
										"type": "Expression"
									},
									"table_name": {
										"value": "@item()",
										"type": "Expression"
									},
									"Path": {
										"value": "/mnt/adls-vista-edw/processed",
										"type": "Expression"
									},
									"environment": {
										"value": "MVP",
										"type": "Expression"
									},
									"schema_name": {
										"value": "VISTA",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "MBUSA_DEV",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "DQF_Masked_Tables",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Loading data to Azure synapse",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@if(equals(pipeline().DataFactory,'xto-MS-edwdev-us-rsv-factory'),pipeline().parameters.dqf_masked_tables,take(array(''),0))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "DQF_noteboook_masked",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/DataEngineering/DATAQUALITY/02_IMPLEMENTATION/DQF_RUN",
								"baseParameters": {
									"Date": {
										"value": "@formatDateTime(variables('run_date'),'yyyy-MM-dd')",
										"type": "Expression"
									},
									"table_name": {
										"value": "@item()",
										"type": "Expression"
									},
									"Path": {
										"value": "/mnt/adls-vista-edw/processed_mask",
										"type": "Expression"
									},
									"environment": {
										"value": "MVP",
										"type": "Expression"
									},
									"schema_name": {
										"value": "VISTA",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "MBUSA_DEV",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Dealer DQF",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Loading data to Azure synapse",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.dealer_table",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Dealer Notebook",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/DataEngineering/DATAQUALITY/02_IMPLEMENTATION/RUN_DQF_DEALER",
								"baseParameters": {
									"Date": {
										"value": "@formatDateTime(variables('run_date'),'yyyy-MM-dd')",
										"type": "Expression"
									},
									"schema_name": {
										"value": "DEALER",
										"type": "Expression"
									},
									"table_name": {
										"value": "@item()",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "MBUSA_DEV",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "run_date",
					"value": {
						"value": "@coalesce(pipeline().parameters.run_date,adddays(utcnow(),-1))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "drop staging table",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Extract Zip Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[ADW_VISTA_EDW_STG].[DROP_STG_TBL]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDW2",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"Files1": {
				"type": "array",
				"defaultValue": [
					"KUF_PLN"
				]
			},
			"Files2": {
				"type": "array",
				"defaultValue": [
					"KUF_PLN"
				]
			},
			"mask_table": {
				"type": "array",
				"defaultValue": []
			},
			"dqf_tables": {
				"type": "array",
				"defaultValue": [
					"KUF_PLN"
				]
			},
			"dqf_masked_tables": {
				"type": "array",
				"defaultValue": []
			},
			"dealer_table": {
				"type": "array",
				"defaultValue": []
			},
			"run_date": {
				"type": "string",
				"defaultValue": null
			}
		},
		"variables": {
			"run_date": {
				"type": "String"
			}
		},
		"folder": {
			"name": "VDW"
		},
		"annotations": [],
		"lastPublishTime": "2023-03-21T02:01:04Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}