{
	"name": "warranty_FFV_RGN_SMY",
	"properties": {
		"activities": [
			{
				"name": "VALIDATE_FILE_RUN",
				"type": "DatabricksNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/DataEngineering/WARRANTY/VALIDATE_FILE_RUN",
					"baseParameters": {
						"pipeline_name": {
							"value": "@pipeline()?.TriggeredByPipelineName",
							"type": "Expression"
						},
						"table_name": {
							"value": "@pipeline().parameters.table_name",
							"type": "Expression"
						},
						"force_run": {
							"value": "@pipeline().parameters.force_run",
							"type": "Expression"
						},
						"run_date": {
							"value": "@pipeline().parameters.run_date",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "MBUSA_DEV",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "File_Found",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Notebook1 and SP",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(equals(activity('VALIDATE_FILE_RUN').output.runOutput,'Continue'), equals(activity('Notebook1').output.runOutput,'Success'))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Create_STG_TBL",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "DROP IF CREATED STG TBL",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@concat(pipeline().parameters.schema_name,'.',pipeline().parameters.table_name, '_CREATE_STG_TBL')",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDW2",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Copy_to_ADW_STG",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Create_STG_TBL",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@concat('/processed/wrnty_opr/',pipeline().parameters.table_name,'/year=',substring(pipeline().parameters.run_date,0,4),'/month=',substring(pipeline().parameters.run_date,5,2),'/day=',substring(pipeline().parameters.run_date,8,2))",
											"type": "Expression"
										},
										"wildcardFileName": "*.csv",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "SqlDWSink"
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "Warranty_incre_csv",
									"type": "DatasetReference",
									"parameters": {
										"source_container_name": {
											"value": "@pipeline().parameters.container_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "base_pattern_dw",
									"type": "DatasetReference",
									"parameters": {
										"schema_name": {
											"value": "@pipeline().parameters.schema_name",
											"type": "Expression"
										},
										"table_name": {
											"value": "@pipeline().parameters.table_name",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Insert_Update_Drop",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy_to_ADW_STG",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@concat(pipeline().parameters.schema_name,'.',pipeline().parameters.table_name, '_INSERT_UPDATE_INCRE')",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDW2",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "DROP IF CREATED STG TBL",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "[ADW_WRNTY_EDW_STG].[DROP_STG_TBL]",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"TABLE_NAME": {
										"value": {
											"value": "@pipeline().parameters.table_name",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDW2",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "File_Found_copy1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Run Notebook",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(equals(activity('VALIDATE_FILE_RUN').output.runOutput,'Continue'), equals(activity('Notebook2').output.runOutput,'Success'))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Create_STG_TBL_copy1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "DROP IF CREATED STG TBL_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@concat(pipeline().parameters.schema_name,'.',pipeline().parameters.table_name, '_CREATE_STG_TBL')",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDW2",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Copy_to_ADW_STG_copy1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Create_STG_TBL_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@concat('/processed/wrnty_opr/',pipeline().parameters.table_name,'2/year=',substring(pipeline().parameters.run_date,0,4),'/month=',substring(pipeline().parameters.run_date,5,2),'/day=',substring(pipeline().parameters.run_date,8,2))",
											"type": "Expression"
										},
										"wildcardFileName": "*.csv",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "SqlDWSink"
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "Warranty_incre_csv",
									"type": "DatasetReference",
									"parameters": {
										"source_container_name": {
											"value": "@pipeline().parameters.container_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "base_pattern_dw",
									"type": "DatasetReference",
									"parameters": {
										"schema_name": {
											"value": "@pipeline().parameters.schema_name",
											"type": "Expression"
										},
										"table_name": {
											"value": "@pipeline().parameters.table_name",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Insert_Update_Drop_copy1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy_to_ADW_STG_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@concat(pipeline().parameters.schema_name,'.',pipeline().parameters.table_name, '_INSERT_UPDATE_INCRE')",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDW2",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "DROP IF CREATED STG TBL_copy1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "[ADW_WRNTY_EDW_STG].[DROP_STG_TBL]",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"TABLE_NAME": {
										"value": {
											"value": "@pipeline().parameters.table_name",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDW2",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "UPDATE_LAST_RUN",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "Insert_Update_Drop_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/DataEngineering/WARRANTY/UPDTAE_LAST_RUN_IN_JSON",
								"baseParameters": {
									"pipeline_name": {
										"value": "@pipeline()?.TriggeredByPipelineName",
										"type": "Expression"
									},
									"table_name": {
										"value": "@pipeline().parameters.table_name",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "MBUSA_DEV",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Notebook1 and SP",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "VALIDATE_FILE_RUN",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('VALIDATE_FILE_RUN').output.runOutput,'Continue')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Delete",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ADW_WRNTY_EDW_STG].[FFV_RGN_SMY_DELETE]",
								"storedProcedureParameters": {
									"run_date_sp": {
										"value": {
											"value": "@pipeline().parameters.run_date",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDW2",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Notebook1",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "Delete",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/DataEngineering/WARRANTY/WRNTY_INCRE_TRANSFORM/FFV_RGN_SMY",
								"baseParameters": {
									"run_date": {
										"value": "@pipeline().parameters.run_date",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "MBUSA_DEV",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Run Notebook",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "File_Found",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('VALIDATE_FILE_RUN').output.runOutput,'Continue')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Notebook2",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/DataEngineering/WARRANTY/WRNTY_INCRE_TRANSFORM/FFV_RGN_SMY_insert",
								"baseParameters": {
									"run_date": {
										"value": "@pipeline().parameters.run_date",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "MBUSA_DEV",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"schema_name": {
				"type": "string"
			},
			"table_name": {
				"type": "string"
			},
			"container_name": {
				"type": "string"
			},
			"run_date": {
				"type": "string"
			},
			"notebook_path": {
				"type": "string"
			},
			"force_run": {
				"type": "string"
			}
		},
		"folder": {
			"name": "WARRANTY|Remarketing"
		},
		"annotations": [],
		"lastPublishTime": "2023-03-21T02:01:22Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}